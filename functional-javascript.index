[{:entry "hole", :definition ["function hole(val /*, validator */) {" "  var h = new Hole();" "  var v = _.toArray(arguments)[1];" "" "  if (v) h.addValidator(v);" "" "  h.setValue(val);" "" "  return h;" "}"]} {:entry "preDepth", :definition ["function preDepth(fun, ary) {" "  return visit(partial1(preDepth, fun), fun, fun(ary));" "}"]} {:entry "toHex", :definition ["function toHex(n) {" "  var hex = n.toString(16);" "  return (hex.length < 2) ? [0, hex].join(''): hex;" "}"]} {:entry "genTail", :definition ["function genTail(gen) { return gen.tail() }"]} {:entry "makeAdder", :definition ["function makeAdder(CAPTURED) {" "  return function(free) {" "    return free + CAPTURED;" "  };" "}"]} {:entry "nexts", :definition ["function nexts(graph, node) {" "  if (_.isEmpty(graph)) return [];" "" "  var pair = _.first(graph);" "  var from = _.first(pair);" "  var to   = second(pair);" "  var more = _.rest(graph);" "" "  if (_.isEqual(node, from))" "    return construct(to, nexts(more, node));" "  else" "    return nexts(more, node);" "}"]} {:entry "Container", :definition ["function Container(val) {" "  this._value = val;" "  this.init(val);" "}"]} {:entry "partial", :definition ["function partial(fun /*, pargs */) {" "  var pargs = _.rest(arguments);" "" "  return function(/* arguments */) {" "    var args = cat(pargs, _.toArray(arguments));" "    return fun.apply(fun, args);" "  };" "}"]} {:entry "songToString", :definition ["function songToString(song) {" "  return [song.artist, song.track].join(\" - \");" "}"]} {:entry "existy", :definition ["function existy(x) { return x != null };"]} {:entry "performCommandHardcoded", :definition ["function performCommandHardcoded(command) {" "  var result;" "" "  switch (command.type) " "  {" "  case 'notify':" "    result = notify(command.message);" "    break;" "  case 'join':" "    result = changeView(command.target);" "    break;" "  default:" "    alert(command.type);" "  }" "" "  return result;" "}"]} {:entry "splat", :definition ["function splat(fun) {" "  return function(array) {" "    return fun.apply(null, array);" "  };" "}"]} {:entry "negativeFifth", :definition ["function negativeFifth(a) {" "  return pipeline(a" "    , fifth" "    , function(n) { return -n });" "}"]} {:entry "pipeline", :definition ["function pipeline(seed /*, args */) {" "  return _.reduce(_.rest(arguments)," "                  function(l,r) { return r(l); }," "                  seed);" "};"]} {:entry "uniqueString", :definition ["function uniqueString(prefix) {" "  return [prefix, new Date().getTime()].join('');" "};"]} {:entry "nth", :definition ["function nth(a, index) {" "  if (!_.isNumber(index)) fail(\"Expected a number as the index\");" "  if (!isIndexed(a)) fail(\"Not supported on non-indexed type\");" "  if ((index < 0) || (index > a.length - 1))" "    fail(\"Index value is out of bounds\");" "" "  return a[index];" "}"]} {:entry "summ", :definition ["function summ(ary) {" "  var result = 0;" "  var sz = ary.length;" "" "  for (var i = 0; i < sz; i++)" "    result += ary[i];" "" "  return result;" "}"]} {:entry "anyOf", :definition ["function anyOf(/* funs */) {" "  return _.reduceRight(arguments, function(truth, f) {" "    return truth || f();" "  }, false);" "}"]} {:entry "mNeg", :definition ["function mNeg() {" "  return function(state) {" "    return {answer: -state, state: -state};" "  }" "}"]} {:entry "postDepth", :definition ["function postDepth(fun, ary) {" "  return visit(partial1(postDepth, fun), fun, ary);" "}"]} {:entry "deepFreeze", :definition ["function deepFreeze(obj) {" "  if (!Object.isFrozen(obj))" "    Object.freeze(obj);" "" "  for (var key in obj) {" "    if (!obj.hasOwnProperty(key) || !_.isObject(obj[key]))" "      continue;" "" "    deepFreeze(obj[key]);" "  }" "}"]} {:entry "CASClass", :definition ["function CASClass() {}"]} {:entry "divPart", :definition ["function divPart(n) {" "  return function(d) {" "    return n / d;" "  };" "}"]} {:entry "allFirstEditions", :definition ["function allFirstEditions(table) {" "  return pipeline(table" "    , RQL.as({ed: 'edition'})" "    , RQL.select(['title', 'edition', 'isbn'])" "    , RQL.where(function(book) {" "      return book.edition === 1;" "    }));" "}"]} {:entry "isEven", :definition ["function isEven(n) { return (n%2) === 0 }"]} {:entry "snapshot", :definition ["function snapshot(o) { return o.snapshot() }"]} {:entry "best", :definition ["function best(fun, coll) {" "  return _.reduce(coll, function(x, y) {" "    return fun(x, y) ? x : y" "  });" "}"]} {:entry "iterateUntil", :definition ["function iterateUntil(fun, check, init) {" "  var ret = [];" "  var result = fun(init);" "" "  while (check(result)) {" "    ret.push(result);" "    result = fun(result);" "  }" "" "  return ret;" "};"]} {:entry "rgbToHexString", :definition ["function rgbToHexString(r, g, b) {" "  return [\"#\", toHex(r), toHex(g), toHex(b)].join('');" "}"]} {:entry "firstEditions", :definition ["function firstEditions(table) {" "  return pipeline(table" "    , function(t) { return as(t, {ed: 'edition'}) }" "    , function(t) { return project(t, ['title', 'edition', 'isbn']) }" "    , function(t) { return restrict(t, function(book) {" "        return book.edition === 1;" "      });" "    });" "}"]} {:entry "andify", :definition ["function andify(/* preds */) {" "  var preds = _.toArray(arguments);" "" "  return function(/* args */) {" "    var args = _.toArray(arguments);" "" "    var everything = function(ps, truth) {" "      if (_.isEmpty(ps))" "        return truth;" "      else" "        return _.every(args, _.first(ps))" "               && everything(_.rest(ps), truth);" "    };" "" "    return everything(preds, true);" "  };" "}"]} {:entry "doWhen", :definition ["function doWhen(cond, action) {" "  if(truthy(cond))" "    return action();" "  else" "    return undefined;" "}"]} {:entry "selectHairColor", :definition ["function selectHairColor(table) {" "  return _.rest(_.map(table, function(row) {" "    return nth(row, 2);" "  }));" "}"]} {:entry "uncheckedSqr", :definition ["function uncheckedSqr(n) { return n * n };"]} {:entry "finder", :definition ["function finder(valueFun, bestFun, coll) {" "  return _.reduce(coll, function(best, current) {" "    var bestValue = valueFun(best);" "    var currentValue = valueFun(current);" "" "    return (bestValue === bestFun(bestValue, currentValue)) ? best : current;" "  });" "}"]} {:entry "f", :definition ["function f() { return dynamicLookup('a'); };"]} {:entry "rightCurryDiv", :definition ["function rightCurryDiv(d) {" "  return function(n) {" "    return n/d;" "  };" "}"]} {:entry "cycle", :definition ["function cycle(times, ary) {" "  if (times <= 0)" "    return [];" "  else" "    return cat(ary, cycle(times - 1, ary));" "}"]} {:entry "generateString", :definition ["function generateString(charGen, len) {" "  return repeatedly(len, charGen).join('');" "}"]} {:entry "complement", :definition ["function complement(PRED) {" "  return function() {" "    return !PRED.apply(null, _.toArray(arguments));" "  };" "}"]} {:entry "processTriples", :definition ["function processTriples(data) {" "  return pipeline(data" "           , JSON.parse" "           , validateTripleStore" "           , deferredSort" "           , force" "           , postProcess" "           , invoker('sort', Array.prototype.sort)" "           , str);" "}"]} {:entry "warn", :definition ["function warn(thing) {" "  console.log([\"WARNING:\", thing].join(' '));" "}"]} {:entry "skipTake", :definition ["function skipTake(n, coll) {" "  var ret = [];" "  var sz = _.size(coll);" "" "  for(var index = 0; index < sz; index += n) {" "    ret.push(coll[index]);" "  }" "" "  return ret;" "}"]} {:entry "onlyEven", :definition ["function onlyEven(array) {" "  return _.filter(array, function(n) {" "    return (n%2) === 0;" "  });" "}"]} {:entry "createScaleFunction", :definition ["function createScaleFunction(FACTOR) {" "  return function(v) {" "    return _.map(v, function(n) {" "      return (n * FACTOR);" "    });" "  };" "}"]} {:entry "g", :definition ["function g() { stackBinder('a', 'g'); return f(); };"]} {:entry "isIndexed", :definition ["function isIndexed(data) {" "  return _.isArray(data) || _.isString(data);" "}"]} {:entry "curry", :definition ["function curry(fun) {" "  return function(arg) {" "    return fun(arg);" "  };" "}"]} {:entry "mSqr", :definition ["function mSqr() {" "  return function(state) {" "    var ans = sqr(state);" "    return {answer: ans, state: ans};" "  }" "}"]} {:entry "repeatedly", :definition ["function repeatedly(times, fun) {" "  return _.map(_.range(times), fun);" "}"]} {:entry "influencedWithStrategy", :definition ["function influencedWithStrategy(strategy, lang, graph) {" "  var results = [];" "" "  strategy(function(x) {" "    if (_.isArray(x) && _.first(x) === lang)" "      results.push(second(x));" "" "    return x;" "  }, graph);" "" "  return results;" "}"]} {:entry "makeUniqueStringFunction", :definition ["function makeUniqueStringFunction(start) {" "  var COUNTER = start;" "" "  return function(prefix) {" "    return [prefix, COUNTER++].join('');" "  }" "};"]} {:entry "go", :definition ["function go() {" "  var d = $.Deferred();" "" "  $.when(\"\")" "   .then(function() {" "     setTimeout(function() {" "       console.log(\"sub-task 1\");" "     }, 5000)" "   })" "   .then(function() {" "     setTimeout(function() {" "       console.log(\"sub-task 2\");" "     }, 10000)" "   })" "   .then(function() {" "     setTimeout(function() {" "       d.resolve(\"done done done done\");" "     }, 15000)" "   })" "" "  return d.promise();" "}"]} {:entry "unzip", :definition ["function unzip(pairs) {" "  if (_.isEmpty(pairs)) return [[],[]];" "" "  return constructPair(_.first(pairs), unzip(_.rest(pairs)));" "}"]} {:entry "unsplat", :definition ["function unsplat(fun) {" "  return function() {" "    return fun.call(null, _.toArray(arguments));" "  };" "}"]} {:entry "evenOline", :definition ["function evenOline(n) {" "  if (n === 0)" "    return true;" "  else" "    return partial1(oddOline, Math.abs(n) - 1);" "}"]} {:entry "curry2", :definition ["function curry2(fun) {" "  return function(secondArg) {" "    return function(firstArg) {" "        return fun(firstArg, secondArg);" "    };" "  };" "}"]} {:entry "visit", :definition ["function visit(mapFun, resultFun, ary) {" "  if (_.isArray(ary))" "    return resultFun(_.map(ary, mapFun));" "  else" "    return resultFun(ary);" "}"]} {:entry "depthSearch", :definition ["function depthSearch(graph, nodes, seen) {" "  if (_.isEmpty(nodes)) return rev(seen);" "" "  var node = _.first(nodes);" "  var more = _.rest(nodes);" "" "  if (_.contains(seen, node))" "    return depthSearch(graph, more, seen);" "  else" "    return depthSearch(graph," "                       cat(nexts(graph, node), more)," "                       construct(node, seen));" "}"]} {:entry "force", :definition ["function force(thunk) {" "  return thunk.force();" "}"]} {:entry "lift", :definition ["function lift(answerFun, stateFun) {" "  return function(/* args */) {" "    var args = _.toArray(arguments);" "" "    return function(state) {" "      var ans = answerFun.apply(null, construct(state, args));" "      var s = stateFun ? stateFun(state) : ans;" "" "      return {answer: ans, state: s};" "    };" "  };" "};"]} {:entry "curry3", :definition ["function curry3(fun) {" "  return function(last) {" "    return function(middle) {" "      return function(first) {" "        return fun(first, middle, last);" "      };" "    };" "  };" "};"]} {:entry "parseAge", :definition ["function parseAge(age) {" "  if (!_.isString(age)) fail(\"Expecting a string\");" "  var a;" "" "  note(\"Attempting to parse an age\");" "  a = parseInt(age, 10);" "" "  if (_.isNaN(a)) {" "    warn([\"Could not parse age:\", age].join(' '));" "    a = 0;" "  }" "" "  return a;" "}"]} {:entry "selectNames", :definition ["function selectNames(table) {" "  return _.rest(_.map(table, _.first));" "}"]} {:entry "areaOfACircle", :definition ["function areaOfACircle(radius) {" "  return PI * sqr(radius);" "}"]} {:entry "fnull", :definition ["function fnull(fun /*, defaults */) {" "  var defaults = _.rest(arguments);" "" "  return function(/* args */) {" "    var args = _.map(arguments, function(e, i) {" "      return existy(e) ? e : defaults[i];" "    });" "" "    return fun.apply(null, args);" "  };" "};"]} {:entry "interpose", :definition ["function interpose (inter, coll) {" "  return butLast(mapcat(function(e) {" "    return construct(e, [inter]);" "  }," "  coll));" "}"]} {:entry "LazyChain", :definition ["function LazyChain(obj) {" "  this._calls  = [];" "  this._target = obj;" "}"]} {:entry "lazyChain", :definition ["function lazyChain(obj) {" "  var calls = [];" "" "  return {" "    invoke: function(methodName /* args */) {" "      var args = _.rest(arguments);" "" "      calls.push(function(target) {" "        var meth = target[methodName];" "" "        return meth.apply(target, args);" "      });" "" "      return this;" "    }," "    force:  function() {" "      return _.reduce(calls, function(ret, thunk) {" "        return thunk(ret);" "      }, obj);" "    }" "  };" "}"]} {:entry "LazyChainChainChain", :definition ["function LazyChainChainChain(obj) {" "  var isLC = (obj instanceof LazyChain);" "" "  this._calls  = isLC ? cat(obj._calls, []) : [];" "  this._target = isLC ? obj._target : obj;" "}"]} {:entry "plucker", :definition ["function plucker(FIELD) {" "  return function(obj) {" "    return (obj && obj[FIELD]);" "  };" "}"]} {:entry "summRec", :definition ["function summRec(ary, seed) {" "  if (_.isEmpty(ary))" "    return seed;" "  else" "    return summRec(_.rest(ary), _.first(ary) + seed);" "}"]} {:entry "truthy", :definition ["function truthy(x) { return (x !== false) && existy(x) };"]} {:entry "hasKeys", :definition ["function hasKeys() {" "  var KEYS = _.toArray(arguments);" "" "  var fun = function(obj) {" "    return _.every(KEYS, function(k) {" "      return _.has(obj, k);" "    });" "  };" "" "  fun.message = cat([\"Must have values for keys:\"], KEYS).join(\" \");" "  return fun;" "}"]} {:entry "stringifyArray", :definition ["function stringifyArray(ary) {" "  return [\"[\", _.map(ary, polyToString).join(\",\"), \"]\"].join('');" "}"]} {:entry "influenced", :definition ["function influenced(graph, node) {" "  return _.map(groupFrom(graph)[node], second);" "}"]} {:entry "doSomething", :definition ["function doSomething(config) {" "  var lookup = defaults({critical: 108});" "" "  return lookup(config, 'critical');" "}"]} {:entry "postProcess", :definition ["function postProcess(arrays) {" "  return _.map(arrays, second);" "}"]} {:entry "always", :definition ["function always(VALUE) {" "  return function() {" "    return VALUE;" "  };" "};"]} {:entry "doubleAll", :definition ["function doubleAll(array) {" "  return _.map(array, function(n) { return n*2 });" "}"]} {:entry "rightAwayInvoker", :definition ["function rightAwayInvoker() {" "  var args = _.toArray(arguments);" "  var method = args.shift();" "  var target = args.shift();" "" "  return method.apply(target, args);" "}"]} {:entry "genHead", :definition ["function genHead(gen) { return gen.head }"]} {:entry "Point", :definition ["function Point(x, y) {" "  this._x = x;" "  this._y = y;" "}"]} {:entry "selectAges", :definition ["function selectAges(table) {" "  return _.rest(_.map(table, second));" "}"]} {:entry "partial1", :definition ["function partial1(fun, arg1) {" "  return function(/* args */) {" "    var args = construct(arg1, arguments);" "    return fun.apply(fun, args);" "  };" "}"]} {:entry "div", :definition ["function div(n, d) { return n / d }"]} {:entry "Queue", :definition ["function Queue(elems) {" "  this._q = elems;" "}"]} {:entry "queue", :definition ["function queue() {" "  return new SaferQueue(_.toArray(arguments));" "}"]} {:entry "stringReverse", :definition ["function stringReverse(s) {" "  if (!_.isString(s)) return undefined;" "  return s.split('').reverse().join(\"\");" "}"]} {:entry "partial2", :definition ["function partial2(fun, arg1, arg2) {" "  return function(/* args */) {" "    var args = cat([arg1, arg2], arguments);" "    return fun.apply(fun, args);" "  };" "}"]} {:entry "isEvenSafe", :definition ["function isEvenSafe(n) {" "  if (n === 0)" "    return true;" "  else" "    return trampoline(partial1(oddOline, Math.abs(n) - 1));" "}"]} {:entry "constructPair", :definition ["function constructPair(pair, rests) {" "  return [construct(_.first(pair), _.first(rests))," "          construct(second(pair),  second(rests))];" "}"]} {:entry "generateRandomCharacter", :definition ["function generateRandomCharacter() {" "  return rand(26).toString(36);" "}"]} {:entry "createPerson", :definition ["function createPerson() {" "  var firstName = \"\";" "  var lastName = \"\";" "  var age = 0;" "" "  return {" "    setFirstName: function(fn) {" "      firstName = fn;" "      return this;" "    }," "    setLastName: function(ln) {" "      lastName = ln;" "      return this;" "    }," "    setAge: function(a) {" "      age = a;" "      return this;" "    }," "    toString: function() {" "      return [firstName, lastName, age].join(' ');" "    }" "  };" "}"]} {:entry "createWeirdScaleFunction", :definition ["function createWeirdScaleFunction(FACTOR) {" "  return function(v) {" "    this['FACTOR'] = FACTOR;" "    var captures = this;" "" "    return _.map(v, _.bind(function(n) {" "      return (n * this['FACTOR']);" "    }, captures));" "  };" "}"]} {:entry "leftCurryDiv", :definition ["function leftCurryDiv(n) {" "  return function(d) {" "    return n/d;" "  };" "}"]} {:entry "deepClone", :definition ["function deepClone(obj) {" "  if (!existy(obj) || !_.isObject(obj))" "    return obj;" "" "  var temp = new obj.constructor();" "  for (var key in obj)" "    if (obj.hasOwnProperty(key))" "      temp[key] = deepClone(obj[key]);" "" "  return temp;" "}"]} {:entry "executeIfHasField", :definition ["function executeIfHasField(target, name) {" "  return doWhen(existy(target[name]), function() {" "    var result = _.result(target, name);" "    console.log(['The result is', result].join(' '));" "    return result;" "  });" "}"]} {:entry "as", :definition ["function as(table, newNames) {" "  return _.map(table, function(obj) {" "    return rename(obj, newNames);" "  });" "};"]} {:entry "asyncGetAny", :definition ["function asyncGetAny(interval, urls, onsuccess, onfailure) {" "  var n = urls.length;" "" "  var looper = function(i) {" "    setTimeout(function() {" "      if (i >= n) {" "        onfailure(\"failed\");" "        return;" "      }" "" "      $.get(urls[i], onsuccess)" "        .always(function() { console.log(\"try: \" + urls[i]) })" "        .fail(function() {" "          looper(i + 1);" "        });" "    }, interval);" "  }" "" "  looper(0);" "  return \"go\";" "}"]} {:entry "isOddSafe", :definition ["function isOddSafe(n) {" "  if (n === 0)" "    return false;" "  else" "    return trampoline(partial1(evenOline, Math.abs(n) - 1));" "}"]} {:entry "defaults", :definition ["function defaults(d) {" "  return function(o, k) {" "    var val = fnull(_.identity, d[k]);" "    return o && val(o[k]);" "  };" "}"]} {:entry "compareLessThanOrEqual", :definition ["function compareLessThanOrEqual(x, y) {" "  if (x < y) return -1;" "  if (y < x) return  1;" "  return 0;" "}"]} {:entry "validator", :definition ["function validator(message, fun) {" "  var f = function(/* args */) {" "    return fun.apply(fun, arguments);" "  };" "" "  f['message'] = message;" "  return f;" "}"]} {:entry "myLength", :definition ["function myLength(ary) {" "  if (_.isEmpty(ary))" "    return 0;" "  else" "    return 1 + myLength(_.rest(ary));" "}"]} {:entry "note", :definition ["function note(thing) {" "  console.log([\"NOTE:\", thing].join(' '));" "}"]} {:entry "generator", :definition ["function generator(seed, current, step) {" "  return {" "    head: current(seed)," "    tail: function() {" "      console.log(\"forced\");" "      return generator(step(seed), current, step);" "    }" "  };" "}"]} {:entry "not", :definition ["function not(x) { return !x }"]} {:entry "second", :definition ["function second(a) {" "  return nth(a, 1);" "}"]} {:entry "contain", :definition ["function contain(value) {" "  return new Container(value);" "}"]} {:entry "oddOline", :definition ["function oddOline(n) {" "  if (n === 0)" "    return false;" "  else" "    return partial1(evenOline, Math.abs(n) - 1);" "}"]} {:entry "lyricSegment", :definition ["function lyricSegment(n) {" "  return _.chain([])" "    .push(n + \" bottles of beer on the wall\")" "    .push(n + \" bottles of beer\")" "    .push(\"Take one down, pass it around\")" "    .tap(function(lyrics) {" "           if (n > 1)" "             lyrics.push((n - 1) + \" bottles of beer on the wall.\");" "           else" "             lyrics.push(\"No more bottles of beer on the wall!\");" "         })" "    .value();" "}"]} {:entry "sqr", :definition ["function sqr(n) {" "  if (!number(n)) throw new Error(number.message);" "  if (zero(n))    throw new Error(zero.message);" "" "  return n * n;" "}"]} {:entry "makeBindFun", :definition ["function makeBindFun(resolver) {" "  return function(k, v) {" "    var stack = globals[k] || [];" "    globals[k] = resolver(stack, v);" "    return globals;" "  };" "}"]} {:entry "strangerIdentity", :definition ["function strangerIdentity(n) {" "  // intentionally stranger still" "  for(this['i'] = 0; this['i']<n; this['i']++);" "  return this['i'];" "}"]} {:entry "evenSteven", :definition ["function evenSteven(n) {" "  if (n === 0)" "    return true;" "  else" "    return oddJohn(Math.abs(n) - 1);" "}"]} {:entry "song", :definition ["function song(start, end, lyricGen) {" "  return _.reduce(_.range(start,end,-1)," "    function(acc,n) {" "      return acc.concat(lyricGen(n));" "    }, []);" "}"]} {:entry "tcLength", :definition ["function tcLength(ary, n) {" "  var l = n ? n : 0;" "" "  if (_.isEmpty(ary))" "    return l;" "  else" "    return tcLength(_.rest(ary), l + 1);" "}"]} {:entry "checker", :definition ["function checker(/* validators */) {" "  var validators = _.toArray(arguments);" "" "  return function(obj) {" "    return _.reduce(validators, function(errs, check) {" "      if (check(obj))" "        return errs" "      else" "        return _.chain(errs).push(check.message).value();" "    }, []);" "  };" "}"]} {:entry "cas", :definition ["function cas(val /*, args */) {" "  var h = hole.apply(this, arguments);" "  var c = new CAS(val);" "  c._validator = h._validator;" "" "  return c;" "}"]} {:entry "randString", :definition ["function randString(len) {" "  var ascii = repeatedly(len,  partial1(rand, 26));" "" "  return _.map(ascii, function(n) {" "    return n.toString(36);" "  }).join('');" "}"]} {:entry "comparator", :definition ["function comparator(pred) {" "  return function(x, y) {" "    if (truthy(pred(x, y)))" "      return -1;" "    else if (truthy(pred(y, x)))" "      return 1;" "    else" "      return 0;" "  };" "};"]} {:entry "condition1", :definition ["function condition1(/* validators */) {" "  var validators = _.toArray(arguments);" "" "  return function(fun, arg) {" "    var errors = mapcat(function(isValid) {" "      return isValid(arg) ? [] : [isValid.message];" "    }, validators);" "" "    if (!_.isEmpty(errors))" "      throw new Error(errors.join(\", \"));" "" "    return fun(arg);" "  };" "}"]} {:entry "cat", :definition ["function cat() {" "  var head = _.first(arguments);" "  if (existy(head))" "    return head.concat.apply(head, _.rest(arguments));" "  else" "    return [];" "}"]} {:entry "isa", :definition ["function isa(type, action) {" "  return function(obj) {" "    if (type === obj.type)" "      return action(obj);" "  }" "}"]} {:entry "butLast", :definition ["function butLast(coll) {" "  return _.toArray(coll).slice(0, -1);" "}"]} {:entry "ContainerClass", :definition ["function ContainerClass() {}"]} {:entry "fifth", :definition ["function fifth(a) {" "  return pipeline(a" "    , _.rest" "    , _.rest" "    , _.rest" "    , _.rest" "    , _.first);" "}"]} {:entry "construct", :definition ["function construct(head, tail) {" "  return cat([head], _.toArray(tail));" "}"]} {:entry "genTake", :definition ["function genTake(n, gen) {" "  var doTake = function(x, g, ret) {" "    if (x === 0)" "      return ret;" "    else" "      return partial(doTake, x-1, genTail(g), cat(ret, genHead(g)));" "  };" "" "  return trampoline(doTake, n, gen, []);" "}"]} {:entry "merge", :definition ["function merge(/*args*/) {" "  return _.extend.apply(null, construct({}, arguments));" "}"]} {:entry "HoleClass", :definition ["function HoleClass() {}"]} {:entry "polyToString", :definition ["function polyToString(obj) {" "  if (obj instanceof String)" "    return obj;" "  else if (obj instanceof Array)" "    return stringifyArray(obj);" "" "  return obj.toString();" "}"]} {:entry "lessOrEqual", :definition ["function lessOrEqual(x, y) {" "  return x <= y;" "}"]} {:entry "allOf", :definition ["function allOf(/* funs */) {" "  return _.reduceRight(arguments, function(truth, f) {" "    return truth && f();" "  }, true);" "}"]} {:entry "lameCSV", :definition ["function lameCSV(str) {" "  return _.reduce(str.split(\"\\n\"), function(table, row) {" "    table.push(_.map(row.split(\",\"), function(c) { return c.trim()}));" "    return table;" "  }, []);" "};"]} {:entry "TableBaseClass", :definition ["function TableBaseClass() {}"]} {:entry "orify", :definition ["function orify(/* preds */) {" "  var preds = _.toArray(arguments);" "" "  return function(/* args */) {" "    var args = _.toArray(arguments);" "" "    var something = function(ps, truth) {" "      if (_.isEmpty(ps))" "        return truth;" "      else" "        return _.some(args, _.first(ps))" "               || something(_.rest(ps), truth);" "    };" "" "    return something(preds, false);" "  };" "}"]} {:entry "project", :definition ["function project(table, keys) {" "  return _.map(table, function(obj) {" "    return _.pick.apply(null, construct(obj, keys));" "  });" "};"]} {:entry "flat", :definition ["function flat(ary) {" "  if (_.isArray(ary))" "    return cat.apply(cat, _.map(ary, flat));" "  else" "    return [ary];" "}"]} {:entry "strangeIdentity", :definition ["function strangeIdentity(n) {" "  var i;" "  for(i=0; i<n; i++);" "  return i;" "}"]} {:entry "dispatch", :definition ["function dispatch(/* funs */) {" "  var funs = _.toArray(arguments);" "  var size = funs.length;" "" "  return function(target /*, args */) {" "    var ret = undefined;" "    var args = _.rest(arguments);" "" "    for (var funIndex = 0; funIndex < size; funIndex++) {" "      var fun = funs[funIndex];" "      ret = fun.apply(fun, construct(target, args));" "" "      if (existy(ret)) return ret;" "    }" "" "    return ret;" "  };" "}"]} {:entry "mapcat", :definition ["function mapcat(fun, coll) {" "  return cat.apply(null, _.map(coll, fun));" "}"]} {:entry "oddJohn", :definition ["function oddJohn(n) {" "  if (n === 0)" "    return false;" "  else" "    return evenSteven(Math.abs(n) - 1);" "}"]} {:entry "invoker", :definition ["function invoker (NAME, METHOD) {" "  return function(target /* args ... */) {" "    if (!existy(target)) fail(\"Must provide a target\");" "" "    var targetMethod = target[NAME];" "    var args = _.rest(arguments);" "" "    return doWhen((existy(targetMethod) && METHOD === targetMethod), function() {" "      return targetMethod.apply(target, args);" "    });" "  };" "};"]} {:entry "aMap", :definition ["function aMap(obj) {" "  return _.isObject(obj);" "}"]} {:entry "repeat", :definition ["function repeat(times, VALUE) {" "  return _.map(_.range(times), function() { return VALUE; });" "}"]} {:entry "addWatcher", :definition ["function addWatcher(o, fun) { o.watch(fun) }"]} {:entry "restrict", :definition ["function restrict(table, pred) {" "  return _.reduce(table, function(newTable, obj) {" "    if (truthy(pred(obj)))" "      return newTable;" "    else" "      return _.without(newTable, obj);" "  }, table);" "};"]} {:entry "actions", :definition ["function actions(acts, done) {" "  return function (seed) {" "    var init = { values: [], state: seed };" "" "    var intermediate = _.reduce(acts, function (stateObj, action) {" "      var result = action(stateObj.state);" "      var values = cat(stateObj.values, [result.answer]);" "" "      return { values: values, state: result.state };" "    }, init);" "" "    var keep = _.filter(intermediate.values, existy);" "" "    return done(keep, intermediate.state);" "  };" "};"]} {:entry "trampoline", :definition ["function trampoline(fun /*, args */) {" "  var result = fun.apply(fun, _.rest(arguments));" "" "  while (_.isFunction(result)) {" "    result = result();" "  }" "" "  return result;" "}"]} {:entry "average", :definition ["function average(array) {" "  var sum = _.reduce(array, function(a, b) { return a+b });" "  return sum / _.size(array);" "}"]} {:entry "deferredSort", :definition ["function deferredSort(ary) {" "  return lazyChain(ary).invoke('sort');" "}"]} {:entry "averageDamp", :definition ["function averageDamp(FUN) {" "  return function(n) {" "    return average([n, FUN(n)]);" "  }" "}"]} {:entry "naiveNth", :definition ["function naiveNth(a, index) {" "  return a[index];" "}"]} {:entry "makeEmptyObject", :definition ["function makeEmptyObject() {" "  return new Object();" "}"]} {:entry "fail", :definition ["function fail(thing) {" "  throw new Error(thing);" "}"]} {:entry "rename", :definition ["function rename(obj, newNames) {" "  return _.reduce(newNames, function(o, nu, old) {" "    if (_.has(obj, old)) {" "      o[nu] = obj[old];" "      return o;" "    }" "    else" "      return o;" "  }," "  _.omit.apply(null, construct(obj, _.keys(newNames))));" "};"]} {:entry "mNote", :definition ["function mNote() {" "  return function(state) {" "    note(state);" "    return {answer: undefined, state: state};" "  }" "}"]} {:entry "ObservedContainerClass", :definition ["function ObservedContainerClass() {}"]}]
